@model ProductListViewModel
@using Entities.Concrete
@{
    Layout = "_Layout";
}
<div id="toastBox" class="toast" style="display:none;">
    @TempData["Message"]
</div>


<div class="p-content">

    @*
    @foreach (var product in Model.Products)
    {
    <div class="product-box">

    <div class="product-box-top">
    @if (Model.ProductImages.ContainsKey(product.ProductId) && Model.ProductImages[product.ProductId].Any())
    {
    <!-- Benzersiz bir carousel bileşeni tanımlıyoruz. Her ürünün kendi carousel'ine sahip olması için ürünün ID'sini carousel id'sine ekliyoruz -->
    <div id="carousel-@product.ProductId" class="carousel slide" data-bs-ride="carousel">

    <!-- carousel-inner: İçinde her bir resim için bir "carousel-item" içeren ana kapsayıcı -->
    <div class="carousel-inner">
    <!-- for döngüsü: Model.ProductImages[product.ProductId] içindeki her bir resim URL'si için döner -->
    @for (int i = 0; i < Model.ProductImages[product.ProductId].Count; i++)
    {
    var imageUrl = Model.ProductImages[product.ProductId][i];
    <!-- imageUrl: Bu döngüdeki resim URL'si -->
    <!-- carousel-item: Slider'daki her bir resim bu yapıda yer alır -->
    <!-- İlk öğeye "active" sınıfı eklenir, böylece slider açıldığında ilk resim gösterilir -->
    <div class="carousel-item @(i == 0 ? "active" : "")">
    <img src="@imageUrl" />
    </div>
    }
    </div>
    <!-- Sol (Önceki) buton: Bir önceki resme geçiş yapılmasını sağlar -->
    <button class="carousel-control-prev" type="button" data-bs-target="#carousel-@product.ProductId" data-bs-slide="prev">
    <span style="background-color:black;" class="carousel-control-prev-icon" aria-hidden="true"></span> <!-- Görsel simge -->
    <span style="background-color:black;" class="visually-hidden">Previous</span> <!-- Ekran okuyucular için açıklama -->
    </button>

    <!-- Sağ (Sonraki) buton: Bir sonraki resme geçiş yapılmasını sağlar -->
    <button class="carousel-control-next" type="button" data-bs-target="#carousel-@product.ProductId" data-bs-slide="next">
    <span style="background-color:black;" class="carousel-control-next-icon" aria-hidden="true"></span> <!-- Görsel simge -->
    <span style="background-color:black;" class="visually-hidden">Next</span> <!-- Ekran okuyucular için açıklama -->
    </button>
    </div>
    }
    </div>
    <div class="product-box-middle">
    <span class="rating" id="rating-stars-@product.ProductId">
    <!-- Yıldızlar burada JavaScript ile doldurulacak -->
    </span>
    <span class="bold-text">₺ @product.Price </span>
    </div>
    <div class="product-box-bottom">
    <div class="product-info">
    <span class="bold-text">@product.Name </span>
    <small>@(product.Description.Length > 30 ? product.Description.Substring(0, 30) + "..." : product.Description)</small>


    </div>
    <div class="product-sale">

    <form method="post" action="@Url.Action("AddToWL", "WishListItem")">
    <input type="hidden" name="ProductId" value="@product.ProductId" />
    <button id="btn-@product.ProductId" type="submit" class="btn-addToWL">
    <i class='bx bx-heart'></i>
    </button>
    </form>
    <form method="post" action="@Url.Action("AddToCart", "Cart")">
    <input type="hidden" name="ProductId" value="@product.ProductId" />
    <button id="btn-@product.ProductId" type="submit" class="btn-addToWL">
    <i class='bx bx-shopping-bag'></i>
    </button>
    </form>
    <form action="@Url.Action("ProductDetail", "Product")">
    <input type="hidden" name="ProductId" value="@product.ProductId" />
    <button id="btn-@product.ProductId" type="submit" class="btn-addToCart">
    <i class='bx bx-detail'></i> Detail
    </button>
    </form>
    </div>

    </div>
    </div>
    } *@
    @{
        List<CouponProduct> couponProducts = Model.couponProducts != null
        ? Model.couponProducts
        : new List<CouponProduct>();

        List<Coupon> coupons = Model.coupons != null
        ? Model.coupons
        : new List<Coupon>();
    }

    
    @foreach (var product in Model.Products)
    {
        var matchingCouponProduct = couponProducts.FirstOrDefault(cp => cp.ProductId == product.ProductId);
        var matchedCoupon = matchingCouponProduct != null
        ? coupons.FirstOrDefault(c => c.CouponId == matchingCouponProduct.CouponId)
        : null;
        string imgurl = "";
        if (Model.ProductImages != null && Model.ProductImages.ContainsKey(product.ProductId) && Model.ProductImages[product.ProductId].Any())
        {
            imgurl = Model.ProductImages[product.ProductId].Last().ImageBase64; // Son resmi alıyoruz
        }

        @* İndirim etiketi *@
       
        <div class="ml-product">
            <div class="p-product-box" style="background-image:url('@imgurl'); width:15rem; height:15rem;">

                @* İndirim etiketi *@
                @if (matchedCoupon != null)
                {
                    <div style="position:absolute; top:0.5rem; right:0.5rem; background-color:red; color:white; padding:4px 8px; font-size:0.8rem; border-radius:0.5rem;">
                        %@matchedCoupon.Discount.ToString("F0") İndirim
                    </div>
                }
                
                <form action="@Url.Action("ProductDetail", "Product")">
                    <input type="hidden" name="ProductId" value="@product.ProductId" />
                    <button class="pb-btn" type="submit" style="border:none;width:3rem; height:3rem;">
                        <i class="fa-regular fa-eye"></i>
                    </button>
                </form>
                <form method="post" action="@Url.Action("AddToWL", "WishListItem")">
                    <input type="hidden" name="ProductId" value="@product.ProductId" />
                    <button class="pb-btn" type="submit" style="border:none; width:3rem; height:3rem;">
                        <i class="fa-regular fa-heart"></i>
                    </button>
                </form>
              
            </div>
         
            <h4 style="font-weight:700;">@product.Name</h4>
            <h6 class="text-muted">@product.Price ₺</h6>
        </div>
    }

</div>
@* @foreach (var product in Model.Products)
{
    <script>


        function renderStars(rating) {
            const fullStar = '<i class="bx bxs-star"></i>';
            const emptyStar = '<i class="bx bx-star"></i>';
            const halfStar = '<i class="bx bxs-star-half"></i>';

            const starsContainer = document.getElementById(`rating-stars-@product.ProductId`);
            let starsHTML = '';

            for (let i = 1; i <= 5; i++) {
                if (i <= Math.floor(rating)) {
                    starsHTML += fullStar;
                } else if (i - rating < 1) {
                    starsHTML += halfStar;
                } else {
                    starsHTML += emptyStar;
                }
            }

            // Yıldızları ve inceleme sayısını ekle
            starsContainer.innerHTML += 'Reviews: ' + starsHTML;
        }


        // Ürün kutularını güncelle

        renderStars(@product.Rating);
    </script>
} *@

